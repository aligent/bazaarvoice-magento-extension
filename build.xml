<?xml version="1.0" encoding="UTF-8"?>

<project name="bazaarvoice_ext" default="build" basedir=".">
	<!-- Properties -->
	<property name="source" value="app/code/local/Bazaarvoice"/>
	<property name="module_name" value="Bazaarvoice_Connector"/>
	<property name="license_id" value="${module_name}-6.0.x.x"/>
	
	<!-- Meta Targets -->
	<target name="analyze" depends="clean,lint,parallelTasks,phpunit"/>
	<target name="build" depends="clean,lint,parallelTasks,phpunit,phpcb,encode,package"/>

	<target name="parallelTasks" description="Run the pdepend, phpmd, phpcpd, phpcs, phpdoc and phploc tasks in parallel using a maximum of 2 threads.">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend"/>
				<antcall target="phpmd"/>
			</sequential>
			<antcall target="phpcpd"/>
			<antcall target="phpcs"/>
			<antcall target="phpdox"/>
			<antcall target="phploc"/>
		</parallel>
	</target>

	<target name="clean" description="Clean up and create artifact directories">
		<delete dir="${basedir}/build/api"/>
		<delete dir="${basedir}/build/code-browser"/>
		<delete dir="${basedir}/build/coverage"/>
		<delete dir="${basedir}/build/logs"/>
		<delete dir="${basedir}/build/pdepend"/>
		<delete dir="${basedir}/build/phpdox"/>
		<delete dir="${basedir}/build/encoded"/>
		<delete dir="${basedir}/build/package"/>

		<mkdir dir="${basedir}/build/api"/>
		<mkdir dir="${basedir}/build/code-browser"/>
		<mkdir dir="${basedir}/build/coverage"/>
		<mkdir dir="${basedir}/build/logs"/>
		<mkdir dir="${basedir}/build/pdepend"/>
		<mkdir dir="${basedir}/build/phpdox"/>
		<mkdir dir="${basedir}/build/encoded"/>
		<mkdir dir="${basedir}/build/package"/>
	</target>

	<target name="lint" description="Perform syntax check of sourcecode files">
		<apply executable="php" failonerror="true">

			<arg value="-l" />

			<fileset dir="${source}">
				<include name="**/*.php" />
				<modified />
			</fileset>

			<!--
			<fileset dir="${basedir}/tests">
			<include name="**/*.php" />
			<modified />
			</fileset>
			-->

		</apply>
	</target>

	<target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
		<exec executable="phpunit" failonerror="true"/>
	</target>

	<target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">
		<exec executable="pdepend">
			<arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
				--jdepend-chart=${basedir}/build/pdepend/dependencies.svg
				--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg
			${source}" />
		</exec>
	</target>

	<target name="phpmd" description="Generate pmd.xml using PHPMD">
		<exec executable="phpmd">
			<arg line="${source}
				xml
				codesize,design,naming,unusedcode
			--reportfile ${basedir}/build/logs/pmd.xml" />
		</exec>
	</target>

	<target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
		<exec executable="phpcpd">
			<arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml ${source}" />
		</exec>
	</target>

	<target name="phploc" description="Generate phploc.csv">
		<exec executable="phploc">
			<arg line="--log-csv ${basedir}/build/logs/phploc.csv ${source}" />
		</exec>
	</target>

	<target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
		<exec executable="phpcs" output="/dev/null">
			<arg line="--report=checkstyle
				--report-file=${basedir}/build/logs/checkstyle.xml
				--standard=SFCExtension
			${source}" />
		</exec>
	</target>

	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox"/>
	</target>

	<target name="phpdoc" description="Generate API documentation using PHPDocumentor">
		<exec executable="phpdoc">
			<arg line="-d ${source} -t ${basedir}/build/api" />
		</exec>
	</target>

	<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
		<exec executable="phpcb">
			<arg line="--log    ${basedir}/build/logs
				--source ${source}
			--output ${basedir}/build/code-browser" />
		</exec>
	</target>

	<target name="encode" description="Encode extension with ioncube">
		<!-- Call ioncube to encode the main source code files only -->
		<!-- We're not actually going to encode any of the Bazaarvoice ext files, just copy them all -->
		<!-- Copy other directories to the encoded copy of extension -->
		<copy todir="${basedir}/build/encoded/app">
			<fileset dir="${basedir}/app" erroronmissingdir="true" />
		</copy>
		<copy todir="${basedir}/build/encoded/skin">
			<fileset dir="${basedir}/skin" erroronmissingdir="true" />
		</copy>
		<copy todir="${basedir}/build/encoded/shell">
			<fileset dir="${basedir}/shell" erroronmissingdir="false" />
		</copy>
	</target>

	<target name="package" description="Package extension using Magento instance Magento Connect packager.  (Magento instance expected at: /var/www/packager)"
			depends="finalclean-packager_1,copy-package,create-package,install-extension,setup-packager_1">
	</target>	
	
	<target name="finalclean-packager_1" depends="copy-package">
		<delete dir="/var/www/packager_1"/>
	</target>

	<target name="copy-package" depends="create-package">
		<copy todir="${basedir}/build/package" >
			<fileset dir="/var/www/packager_1/var/connect">
				<include name="**/${module_name}*tgz"/>
			</fileset>		
		</copy>		
	</target>	

	<target name="create-package" depends="setup-packager_1,install-extension">
		<exec executable="php" dir="/var/www/packager_1" failonerror="true">
			<arg line="/var/www/packager_1/shell/sfcpack.php ${basedir}/var/connect/${module_name}.xml" />
		</exec>		
	</target>	

	<target name="install-extension" depends="setup-packager_1" >
		<copy todir="/var/www/packager_1">
			<fileset dir="${basedir}/build/encoded" />
		</copy>		
	</target>
	
	<target name="setup-packager_1" depends="clean-packager_1,create-db-packager_1,setup-db-packager_1">
		<copy todir="/var/www/packager_1">
			<fileset dir="/var/www/packager" >
				<exclude name="**/var/cache/**" />
				<exclude name="**/var/full_page_cache/**" />
				<exclude name="**/var/log/**" />
				<exclude name="**/var/report/*" />
				<exclude name="**/var/session/**" />
				<exclude name="**/var/licenser/**" />
			</fileset>
		</copy>				
   	</target>

	<target name="clean-packager_1">
		<delete dir="/var/www/packager_1"/>
	</target>

	<target name="setup-db-packager_1" depends="create-db-packager_1">
		<exec executable="mysql" input="/var/www/packager/instance/packager_1.sql" failonerror="true">
			<arg line="-u packager_admin -pabc_123_xyz packager_1" />
		</exec>		
   	</target>

	<target name="create-db-packager_1" depends="">
		<exec executable="mysql" input="/var/www/packager/instance/create_packager_1.sql" failonerror="true">
			<arg line="-u packager_admin -pabc_123_xyz" />
		</exec>		
   	</target>

</project>
